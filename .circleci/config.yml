# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
#version: 2.1
# Use a package of configuration called an orb.
#orbs:
#
#  welcome: circleci/welcome-orb@0.4.1
#
#workflows:
#
#  welcome:
#
#    jobs:
#      - welcome/run
version: 2.1
orbs:
  #coveralls: coveralls/coveralls@1.0.6
  codecov: codecov/codecov@1.0.2
jobs:
  build:
#    working_directory: ~/
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:

      #- checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Agree to sdk licences
          command: echo y | sdkmanager --licenses
      - run:
          name: Update sdk licences
          command: echo y | sdkmanager --update || exit 0
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - run:
          name: Run UnitTests
          command: ./gradlew test
          
      - codecov/upload:
          file: {{ codecov.yml }}

      - run: curl -s https://codecov.io/bash | bash
     # - run: bash <(curl -s https://codecov.io/bash)
      #- run:
       #   name: Run Coveralls
        #  command: ./gradlew test jacocoTestReport coveralls


      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
#      - run:
#          name: Upload coverage to code climate
#          command: |
#                  export JACOCO_SOURCE_PATH=app/src/main/java
#                  ./cc-test-reporter format-coverage app/build/reports/coverage/debug/report.xml -t jacoco
#                  ./cc-test-reporter upload-coverage
#      - coveralls/upload
#      - run:
#          name: Run Coveralls
#          command: ./gradlew jacocoTestReport coveralls
#       - ./gradlew jacocoTestReport coveralls
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
